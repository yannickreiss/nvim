snippet colx "textcolor"
\\textcolor{${1:red}}{$2}$0
endsnippet

snippet tred "text red" Ai
\\textcolor{red}{$1}$0
endsnippet

snippet tblue "text blue" Ai
\\textcolor{blue}{$1}$0
endsnippet

snippet tgreen "text green" Ai
\\textcolor{green}{$1}$0
endsnippet

snippet colb "boxcolor"
\\colorbox{${1:blue}!${2:25}}{$3}$0
endsnippet

snippet ,m "inlinemath" iA
\\( $1 \\)$0
endsnippet

snippet ;M "fullmath" iA
\\[ $1 \\]
$0
endsnippet

snippet vec "Vector"
\\vec{$1}$0
endsnippet

snippet #env "Environment" bA
\\begin{$1}
	$2
\\end{$1}$0
endsnippet

snippet code "listing without own config"
\\begin{lstlisting}
$1
\\end{lstlisting}$0
endsnippet

snippet ccpp "C++ listing configuration"
\\lstset{ basicstyle=\\ttfamily\\small, language=C++, keywordstyle=\\color{blue}\\bfseries, numbers=left } $0
endsnippet

snippet casm "Assembler listing configuration"
\\lstset{basicstyle=\\ttfamily\\small, language={[${1:x86masm}]Assembler}, keywordstyle=\\color{${2:red}}\\bfseries, numbers=left} $0
endsnippet

snippet cshell "ZSH/BASH config"
\\lstset{basicstyle=\\ttfamily\\small, language={bash}, keywordstyle=\\color{${2:green}}\\bfseries, numbers=left} $0
endsnippet

snippet cocode "Free config"
\\lstset{basicstyle=\\ttfamily\\small, language={$1}, keywordstyle=\\color{${2:blue}}\\bfseries, numbers=left} $0
endsnippet

snippet img "Images"
\\begin{figure}[${1:H}]
\\centering
\\includegraphics[width=${2:0.8}\\linewidth]{${3}}
\\caption{${4:Abbildung}}
\\end{figure}
$0
endsnippet

snippet document "Add document environment"
\\begin{document}
\\input{~/latex/formulas.tex}
\\input{~/latex/units.tex}
$0
\\end{document}
endsnippet

snippet textemplate "include header" A
\\input{~/latex/header.tex}
\\header{${1:report/article}}{${2:Yannick Reiß}}{${3:Titel}}

\\begin{document}
\\input{~/latex/init.tex}
$0
\\end{document}
endsnippet

snippet && "Logical and"
\\wedge $0
endsnippet

snippet || "Logical or"
\\vee $0
endsnippet

snippet ubrace "Underbrace"
\\underbrace{$2}_{$1} $0
endsnippet

snippet fall "For all"
\\forall_{$1} $2
$0
endsnippet

snippet paragraph "Paragraph"
\\paragraph{$1}
$0
endsnippet

snippet xdelete "Cross out" i
\\xcancel{$1}$0
endsnippet

snippet frac "Fracture" i
\\frac{$1}{$2}$0
endsnippet

snippet mspace "Math Space"
\\quad $0
endsnippet

snippet mmspace "Math double Space"
\\qquad $0
endsnippet

snippet sum "Sum" i
\\sum_{i${1:=0}}^{${2:n}} $3 $0
endsnippet

snippet prod "Product"
\\prod_{i=${1:1}}^{${2:N}} \\quad $3 \\qquad$0
endsnippet

snippet lquote "Low Quote"
´$1\´$0
endsnippet

snippet fquote "Full Quote"
'$1´ \\textit{($2)}$0
endsnippet

snippet href "html reference"
\\href{https://${1:link}}{\\underline{\\textcolor{blue}{${2:Text}}}}$0
endsnippet

snippet *_ "Intervall/Isotope-Notation" i
^{$1}_{$2}$0
endsnippet

snippet hook "Reference to text"
\\hyperref[$1]{$2}$0
endsnippet

snippet {} "{ ... }"
\\left\\{ $1 \\right\\} $0
endsnippet

snippet [] "[...]"
\\left[ $1 \\right] $0
endsnippet

snippet () "( ... )"
\\left( $1 \\right) $0
endsnippet

snippet ,text "Mathmode-text" iA
\\text{ $1 }$0
endsnippet

snippet period "Periodic number" i
\\overline{$1}$0
endsnippet

snippet leq "lesser equal"
\\leq
endsnippet

snippet geq "greater equal"
\\geq
endsnippet

snippet case "if else mathstyle"
\\begin{cases}
$1 & \\quad \\text{$2}\\\\ $3 & \\quad \\text{$4}\\\\ \\end{cases}$0
endsnippet

snippet median "Median"
\\overset{\\thicksim}{$1}$0
endsnippet

snippet ival "Intervall"
\\interval[$1]{$2}{$3}$0
endsnippet

snippet xx "multiplication" i
\\cdot $0
endsnippet

snippet root "nth root" i
\\sqrt[$1]{$2} $0
endsnippet

snippet sdef "Definition"
\\colorbox{blue!25}{Definition: $1} \\\\\\$0
endsnippet

snippet mlgs "Lineares Gleichungssytem"
\\begin{gather}
$0
\\end{gather}
endsnippet

snippet cobol "COBOL config"
\\lstset{ basicstyle=\\ttfamily\\small, language=COBOL, numbers=left, keywordstyle=\\color{blue}\\bfseries} $0
endsnippet

snippet '(.*)__' "sub" rA
`!p snip.rv = match.group(1)`_{$1}$0
endsnippet

snippet '(.*)\*\*' "upup" r
`!p snip.rv = match.group(1)`^{$1}$0
endsnippet

snippet ... "dots" i
\\dots
endsnippet

snippet fsf "text serif"
\\textsf{$1}$0
endsnippet

snippet fblk "text block"
\\texttt{$1}{$0}
endsnippet

snippet fit "text italic"
\\textit{$1}$0
endsnippet

snippet '//(.+)//' "Make Text italic" rA
\\textit{`!p snip.rv = match.group(1)`}$0
endsnippet

snippet '~~(.+)~~' "underline Text" rA
\\underline{`!p snip.rv = match.group(1)`} $0
endsnippet

snippet fbf "text bold"
\\textbf{$1}$0
endsnippet

snippet '\*\*(.+)\*\*' "Make Text bold" rA
\\textbf{`!p snip.rv = match.group(1)`}$0
endsnippet

snippet bit "itemize"
\\begin{itemize}
	\\item  $1`!p t[1] = t[1].replace(" \n", "\n\t\\item")`
\\end{itemize}
$0
endsnippet

snippet ben "enumerate"
\\begin{enumerate}
	\\item  $1`!p t[1] = t[1].replace(" \n", "\n\t\\item")` 
\\end{enumerate}
$0
endsnippet

snippet - "new item" b
\\item  $0
endsnippet

snippet sch "chapter"
\\chapter{$1}$0
endsnippet

snippet sse "Section"
\\section{$1}$0
endsnippet

snippet sss "Subsection"
\\subsection{$1}$0
endsnippet

snippet ssn "Subsubsection"
\\subsubsection{$1}$0
endsnippet

snippet par "Paragraph"
\\paragraph{$1}$0
endsnippet

snippet mquote "max quote"
\`$1\` (${2:author} : \\textit{${3:source}}, ${4:year})$0
endsnippet

snippet qed "Quod erat demonstrantum"
\qed
$0
endsnippet

snippet <- "Easy Left" iA
\\(\\leftarrow\\)$0
endsnippet

snippet => "Double Right" iA
\\(\\Rightarrow\\)$0
endsnippet

snippet <= "Double Left" iA
\\(\\Leftarrow\\)$0
endsnippet

snippet -> "Easy Right" iA
\\(\\rightarrow\\)$0
endsnippet

snippet circuit "Circuit environment"
\\colorbox{blue!10}{
\\begin{circuitikz}[european resistors]
$1
\\end{circuitikz}}
$0
endsnippet

snippet edraw "Draw into electric circuit"
\\draw(${1:0}, ${2:0}) 
$3
;
$0
endsnippet

snippet 'R "Insert Resistor"
to [R=$R_{$1}: $2 \Omega$, ${3:i =$i$}, ${4:*-*}] ($5, $6)
$0
endsnippet

snippet 'W "Wire"
to [short, ${1:i=$i$}, ${2:*-*}] ($3, $4)
$0
endsnippet

snippet 'V "Voltage"
to [V, v=$U_{$1}: $2V$, ${3:i=$i$}, ${4:*-*}] ($5, $6)
$0
endsnippet

snippet 'L "Coil"
to [L=$L_{$1}: $2H$, ${3:i=$i$}, ${4:*-*}] ($4, $5)
$0
endsnippet

snippet 'C "Capacitor"
to [C=$C_{$1}: $2F$, ${3:i=$i$}, ${4:*-*}] ($3, $4)
$0
endsnippet

snippet 'W' "Wired powerline"
to [short, ${1:*-*}] ($2, $3)
$0
endsnippet

snippet 'G "GROUND"
to [short] node[ground] {$1} ($2, $3)
$0
endsnippet

snippet 'SA "(Sende)-Antenne"
to [short] node[antenna] {$1} ($2, $3)
$0
endsnippet

snippet timenow "The current time"
`date`
endsnippet

snippet texmeta "Meta with stamp for better documentation"
% ${1:Name} `!p import random as ran
if not snip.c:
	snip.rv = t[1][0] + str(ran.randint(10, 100))`: ${2:Content} on `date` by `echo $USER`
$0
endsnippet

snippet ;L "List math with align" A
\\begin{align}
$1
\\end{align}
$0
endsnippet

snippet lexp "List math expression" A
$1 &= ${2:First} & ${3:Second} ${4:\\nonumber} \\\\
$0
endsnippet

snippet definition "Box with definition"
\\framebox{
\\colorbox{blue!25}{
\\begin{minipage}{1.0\\textwidth}
\\textbf{Definition: $1}\\\\
$2
\\end{minipage}}}
$0
endsnippet

snippet attention "Box for attention"
\\framebox{
\\colorbox{red!25}{
\\begin{minipage}{1.0\\textwidth}
\\textbf{Achtung: $1}\\\\
$2
\\end{minipage}}}
$0
endsnippet

global !p
def create_table_tabs(snip):
	anon_snippet_body = ""
	# get start and end line number of (expanded) snippet
	start = snip.snippet_start[0]
	end = snip.snippet_end[0]
	# Append current line into snippet
	for i in range(start, end+1):
		anon_snippet_body += snip.buffer[i]
		anon_snippet_body += "" if i == end else '\n'
	# delete expanded snippet line while preserving the line
	for i in range(start, end):
		del snip.buffer[start]
	# Empty last line, while preserving the line
	snip.buffer[start] = ''
	# Expand anonymous snippet
	snip.expand_anon(anon_snippet_body)

def create_table(cols, rows, sep, start, end, head="##"):
	res = ""
	placeholder = 1
	for _ in range(0, int(rows)):
		res += start + head.replace("##", f"${placeholder} ")
		placeholder += 1
		for _ in range(0, int(cols) - 1):
			res += sep + head.replace("##", f" ${placeholder} ")
			placeholder += 1
		res += end
	return res[:-1]
endglobal

post_jump "create_table_tabs(snip)"
snippet 'table(\d+),(\d+)' "Table with given row and column count" r
\\begin{center}
\\begin{tabular}{`!p
orient = " "
for _ in range(0, int(match.group(1))): orient += "c "
snip.rv = orient`}
`!p
snip.rv = create_table(match.group(1), match.group(2), "&", "\t", "\\\\\\\\\n")
`
\end{tabular}
\end{center}
$0
endsnippet

post_jump "create_table_tabs(snip)"
snippet 'matrix(\d+),(\d+)' "Table with given row and column count" r
\\begin{pmatrix}
`!p
snip.rv = create_table(match.group(1), match.group(2), "&", "\t", "\\\\\\\\\n")
`
\\end{pmatrix}
$0
endsnippet

snippet colorbox "color box: set own caption and content"
\\framebox{
\\colorbox{${1:green}!20}{
\\begin{minipage}{1.0\\textwidth}
\\textbf{$2}\\\\
$3
\\end{minipage}}}
$0
endsnippet

snippet "menge_(\w+)" "Menge der X Zahlen" rA
\\mathbb{`!p snip.rv = match.group(1)`} $0
endsnippet

snippet pq "pq-formula" i
\\pq{$1}{$2} $0
endsnippet

snippet idr "In der Regel" i
in der Regel
endsnippet

snippet usw "und so weiter" i
und so weiter
endsnippet

snippet tikzenv "tikzenvironment" A
\\begin{tikzpicture}
	$1
\\end{tikzpicture}
$0
endsnippet

snippet flowstart "insert flowstart" 
\\flowstart{$1}{$2}$0
endsnippet

snippet flowstop "insert flowstop" 
\\flowstop{$1}{$2}$0
endsnippet

snippet %% "Percent" iA
\%$0
endsnippet

snippet integral "add Integral" i
\integral{$1}{$2}{$3}{$4} $0
endsnippet

snippet frame "Add a new Frame" b
\\subsection{$1}
\\begin{frame}
\\frametitle{$1}
	$2
\\end{frame}$0
endsnippet

snippet != "not equal" iA
\\neq $0
endsnippet

